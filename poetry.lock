[[package]]
name = "networkx"
version = "2.8.6"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=2.20)", "mypy (>=0.961)"]
doc = ["sphinx (>=5)", "pydata-sphinx-theme (>=0.9)", "sphinx-gallery (>=0.10)", "numpydoc (>=1.4)", "pillow (>=9.1)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.1)", "pytest-cov (>=3.0)", "codecov (>=2.1)"]

[[package]]
name = "penman"
version = "1.1.0"
description = "PENMAN notation for graphs (e.g., AMR)"
category = "main"
optional = false
python-versions = "*"

[package.extras]
tests = ["flake8", "mypy", "pytest"]
docs = ["pygments (==2.6.1)", "sphinxcontrib-tikz (==0.4.8)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==3.0.2)"]
dev = ["twine (>=1.11.0)", "wheel (>=0.31.0)", "setuptools (>=38.6.0)", "flake8", "mypy", "pytest", "pygments (==2.6.1)", "sphinxcontrib-tikz (==0.4.8)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==3.0.2)"]

[[package]]
name = "progress"
version = "1.5"
description = "Easy to use progress bars"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pydelphin"
version = "1.6.0"
description = "Libraries and scripts for DELPH-IN data"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
penman = "1.1.0"
progress = "1.5"

[package.extras]
dev = ["sphinx (==2.2.0)", "sphinx-rtd-theme (==0.4.3)", "delphin.highlight (==1.0.0)", "requests (==2.22.0)", "falcon (==2.0.0)", "regex (==2020.1.8)", "pytest", "flake8", "mypy", "types-requests", "setuptools (>=38.6.0)", "wheel (>=0.31.0)", "twine (>=1.11.0)"]
docs = ["sphinx (==2.2.0)", "sphinx-rtd-theme (==0.4.3)", "delphin.highlight (==1.0.0)", "requests (==2.22.0)", "falcon (==2.0.0)"]
repp = ["regex (==2020.1.8)"]
tests = ["regex (==2020.1.8)", "requests (==2.22.0)", "falcon (==2.0.0)", "pytest", "flake8", "mypy", "types-requests"]
web = ["requests (==2.22.0)", "falcon (==2.0.0)"]

[[package]]
name = "pydot"
version = "1.4.2"
description = "Python interface to Graphviz's Dot"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = ">=2.1.4"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "returns"
version = "0.19.0"
description = "Make your functions return something meaningful, typed, and safe!"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
typing-extensions = ">=4.0,<5.0"

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[metadata]
lock-version = "1.1"
python-versions = "^3.8"
content-hash = "5289cf9b7e59679d1e6e2a959dad583b06950e6afb889333cecd920396f1916f"

[metadata.files]
networkx = []
penman = []
progress = [
    {file = "progress-1.5.tar.gz", hash = "sha256:69ecedd1d1bbe71bf6313d88d1e6c4d2957b7f1d4f71312c211257f7dae64372"},
]
pydelphin = []
pydot = []
pyparsing = [
    {file = "pyparsing-3.0.9-py3-none-any.whl", hash = "sha256:5026bae9a10eeaefb61dab2f09052b9f4307d44aee4eda64b309723d8d206bbc"},
    {file = "pyparsing-3.0.9.tar.gz", hash = "sha256:2b020ecf7d21b687f219b71ecad3631f644a47f01403fa1d1036b0c6416d70fb"},
]
returns = []
typing-extensions = []
